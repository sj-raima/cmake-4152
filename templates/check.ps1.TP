if (projectInclude ("WINDOWS", "LINUX", "LINUX", "OSX", "IOS", "ANDROID", "QNX", "JAVA") and $LANGUAGE ne "cs" and ($#CHECKS >= 0 or $#SUBDIRS >= 0 or $#TESTS >= 0)) {
    $output_executable='t';
    $output= "#!/usr/bin/pwsh
# ------ Auto generated please do not edit this file ------
#
# Tests located in this directory and its sub-directories can be run
#  as follows:
#
#     - Change the current working directory to the build directory
#       corresponding to where this check script is located. In the
#       case of an in-source build the build directory is the same
#       as the source directory.
#
#     - Run this check script by specifying the path to this check
#       script. Use a relative path or an absolute path.  In the
#       case of an in-source build specify './check.sh'. Don't rely
#       on the PATH environment variable to run this script.

. \"\$(split-path \$PSCommandPath)/${TOPDIR}/check-header.ps1\"
check_begin \$PSCommandPath \$args

# TBD: Take out
#\" Path: \$path\"
#\" Program: \$global:program\"
#\" All_dir: \$global:all_dir\"
#\" Pathup: \$global:pathup\"

";

    # Process check scripts
    my $check;
    foreach $check (@CHECKS) {
        if ($check =~ m/(.*)\.(ps1)$/) {
            $base = $check;
            $base =~ s/Check.(ps1)//;
            $output.= "check_qa $base\n";
        }
    }

    # Process SUBDIRS
    my $dir;
    foreach $dir (@SUBDIRS) {
        if ($#PLATFORM_INC < 0 && $#PLATFORM_EXCL) {
            $output.= "check_subdir $dir\n";
        }
        else {
            $output.= "check_subdir_if_exist $dir\n";
        }
    }

    if ($#DEPENDENCIES >= 0)
    {
        $output.= "# Setting up the PATH environment variable for tools\n";
        foreach $dep (@DEPENDENCIES) {
            $output.= '$Env:PATH = $Env:PATH + [IO.Path]::PathSeparator + "' . "$TOPDIR/$DIRPATH{$dep}\$script:check_build_type" . "\"\n";
        }
        $output.= "\n";
    }

    # Process TESTS
    my $test;
    foreach $test (@TESTS) {
        if ($test =~ m/(.*)\.pl$/) {
            $output.= "check_perl_script $test\n";
        }
        elsif ($test =~ m/(.*)\.ps1$/) {
            $output.= "check_ps1_script $test\n";
        }
        elsif ($test =~ m/(.*)\.bat$/) {
            $test_ps1 = $test;
            $test_ps1 =~ s/.bat$/.ps1/;
            if (not grep(/^$test_ps1$/, @TESTS)) {
                $output.= "check_bat_script $test\n";
            }
        }
        elsif ($test =~ m/(.*)\.sh$/) {
            $test_ps1 = $test;
            $test_ps1 =~ s/.sh$/.ps1/;
            if (not grep(/^$test_ps1$/, @TESTS)) {
                $output.= "check_sh_script $test\n";
            }
        }
        elsif ($LANGUAGE eq "cs") {
        }
        elsif ($LANGUAGE eq "java") {
            $output.= "check_java_executable $test\n";
        }
        else {
            $output.= "check_executable $test\n";
        }
    }

    $output.= "\ncheck_end\n";
}
